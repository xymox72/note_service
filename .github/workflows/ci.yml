name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  setup:
    name: üõ†Ô∏è Setup & Build
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/xymox72/devops-rust:latest
    steps:
      - uses: actions/checkout@v3.5.4

      - name: Cache cargo dependencies
        id: cache
        uses: actions/cache@v3.3.2
        with:
          path: |
            /root/.cargo/registry
            /root/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Build project
        run: just build-local

      - name: Upload target dir
        uses: actions/upload-artifact@v3.1.2
        with:
          name: target-dir
          path: target

  test:
    name: ‚úÖ Test
    runs-on: ubuntu-latest
    needs: setup
    container:
      image: ghcr.io/xymox72/devops-rust:latest
    steps:
      - uses: actions/checkout@v3.5.4

      - name: Restore cargo cache
        uses: actions/cache@v3.3.2
        with:
          path: |
            /root/.cargo/registry
            /root/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Download build artifacts
        uses: actions/download-artifact@v3.1.2
        with:
          name: target-dir
          path: target

      - name: Run tests
        run: just test

  lint:
    name: üîç Lint
    runs-on: ubuntu-latest
    needs: setup
    container:
      image: ghcr.io/xymox72/devops-rust:latest
    steps:
      - uses: actions/checkout@v3.5.4

      - name: Restore cargo cache
        uses: actions/cache@v3.3.2
        with:
          path: |
            /root/.cargo/registry
            /root/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Download build artifacts
        uses: actions/download-artifact@v3.1.2
        with:
          name: target-dir
          path: target

      - name: Run linter
        run: just lint

  fmt:
    name: üßπ Format Check
    runs-on: ubuntu-latest
    needs: setup
    container:
      image: ghcr.io/xymox72/devops-rust:latest
    steps:
      - uses: actions/checkout@v3.5.4

      - name: Restore cargo cache
        uses: actions/cache@v3.3.2
        with:
          path: |
            /root/.cargo/registry
            /root/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Download build artifacts
        uses: actions/download-artifact@v3.1.2
        with:
          name: target-dir
          path: target

      - name: Check formatting
        run: just fmt
